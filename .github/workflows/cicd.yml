name: CICD

on: [workflow_dispatch]
#on:
  #push:
  #  branches: [ main ]

jobs:
  generate-version:
    runs-on: ubuntu-latest

    permissions:
      contents: write    

    steps:
    - uses: actions/checkout@v3   
    
    - name: Github Tag Bump
      id: tag_bump
      uses: anothrNick/github-tag-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}     
        INITIAL_VERSION: 1.0.2
        DEFAULT_BUMP: patch
        
    outputs:
      new_version: ${{ steps.tag_bump.outputs.new_tag }}


  package-and-publish-contracts:

    runs-on: ubuntu-latest
    needs: generate-version

    permissions:
      contents: read
      packages: write        
      
    steps:
    - uses: actions/checkout@v3
    
    - name: Print new version to logs 
      run: echo "The new version is ${{ needs.generate-version.outputs.new_version }}"

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        source-url: https://nuget.pkg.github.com/${{github.repository_owner}}/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        
    - name: Pack
      run: | 
        dotnet pack src/Play.Identity.Contracts/ \
        --configuration Release \
        -p:PackageVersion=${{ needs.generate-version.outputs.new_version }} \
        -p:RepositoryUrl=https://github.com/${{github.repository_owner}}/play.identity \
        -o packages

    - name: Publish
      run: dotnet nuget push packages/*.nupkg --skip-duplicate            
      

  deploy-microservice:

    runs-on: ubuntu-latest
    needs: 
      - generate-version
      - package-and-publish-contracts 
      
    permissions:
      id-token: write
      contents: read

    steps:
    - uses: actions/checkout@v3

    - name: Azure Login
      uses: Azure/login@v1
      with:
        # ClientId of the Azure Service principal created.
        client-id: ${{secrets.SERVICE_PRINCIPAL_CLIENT_ID}}
        # TenantId of the Azure Service principal created.
        tenant-id: ${{secrets.TENANT_ID}}
        # Azure subscriptionId
        subscription-id: ${{secrets.SUBSCRIPTION_ID}}
    
    - name: Login to container registry
      run: az acr login --name ${{secrets.APP_NAME}}
    

    - name: Print new version to logs 
      run: echo "The new version is ${{ needs.generate-version.outputs.new_version }}"

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{secrets.APP_NAME}}.azurecr.io/play.identity:${{ needs.generate-version.outputs.new_version }}
        build-args: |
          GH_OWNER=${{ github.repository_owner }}
          GH_PAT=${{ secrets.GH_PAT }}
      
    - name: Set Docker image tag 
      id: set_docker_image_tag     
      run: echo "docker_image_tag=${{ secrets.APP_NAME }}.azurecr.io/play.identity:${{ needs.generate-version.outputs.new_version }}" >> $GITHUB_ENV

 
    - name: Set and verifyenvironment variables
      run: |
          DOCKER_IMAGE=${{ env.docker_image_tag }}
          echo $DOCKER_IMAGE
   
    - name: Substitute variables in the Kubernetes YAML template
      run: envsubst < ./kubernetes/identity.yaml > ./kubernetes/identity-updated.yaml

    - name: Verify substituted YAML file 
      run: cat ./kubernetes/identity-updated.yaml

    - name: Set AKS context
      run: az aks get-credentials --name ${{ secrets.APP_NAME }} --resource-group ${{ secrets.APP_NAME }}     

    - name: Create namespace 
      run: |
          kubectl create namespace identity || echo "Namespace already exists"

    - name: Deploy Signing Cert
      run: |
          kubectl apply -f ./kubernetes/signing-cer.yaml -n identity    
      
    - name: Deploy Identity Service
      run: |
        kubectl apply -f ./kubernetes/identity-updated.yaml -n identity