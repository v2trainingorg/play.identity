name: CICD

on: [workflow_dispatch]
#on:
  #push:
  #  branches: [ main ]

jobs:
  generate-version:
    runs-on: ubuntu-latest

    permissions:
      contents: write    

    steps:
    - uses: actions/checkout@v3   
    
    - name: Github Tag Bump
      id: tab_bump
      uses: anothrNick/github-tag-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}     
        INITIAL_VERSION: 1.0.2
        DEFAULT_BUMP: patch
        
    outputs:
      new_version: ${{ steps.tab_bump.outputs.new_tag }}


  package-and-publish-contracts:

    runs-on: ubuntu-latest
    needs: generate-version

    permissions:
      contents: read
      packages: write        

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        source-url: https://nuget.pkg.github.com/${{github.repository_owner}}/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        
    - name: Pack
      run: | 
        dotnet pack src/play.identity/ \
        --configuration Release \
        -p:PackageVersion=${{ needs.generate-version.outputs.new_version }} \
        -p:RepositoryUrl=https://github.com/${{github.repository_owner}}/play.identity \
        -o packages

    - name: Publish
      run: dotnet nuget push packages/*.nupkg
            

  build-and-push-dockerimage:

    runs-on: ubuntu-latest
    needs: package-and-publish-contracts
    
    env:
      APP_NAME: ${{secrets.APP_NAME}}
      SERVICE_NAME: identity
            
    permissions:
      id-token: write
      contents: read

    steps:
    - uses: actions/checkout@v3

    - name: Azure Login
      uses: Azure/login@v1
      with:
        # ClientId of the Azure Service principal created.
        client-id: ${{secrets.AZURE_CLIENT_ID}}
        # TenantId of the Azure Service principal created.
        tenant-id: ${{secrets.AZURE_TENANT_ID}}
        # Azure subscriptionId
        subscription-id: ${{secrets.AZURE_SUBSCRIPTION_ID}}
    
    - name: Login to container registry
      run: az acr login --name ${{secrets.APP_NAME}}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        secrets: |
          "GH_OWNER=${{github.repository_owner}}"
          "GH_PAT=${{secrets.GH_PAT}}"
        tags: ${{secrets.APP_NAME}}.azurecr.io/play.identity:${{ needs.generate-version.outputs.new_version }}
        push: true


  deploy-identity-service:
    runs-on: ubuntu-latest
    needs: build-and-push-dockerimage

    permissions: 
      id-token: write 
      contents: read
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v1

      - name: Azure Login
        uses: Azure/login@v1
        with:
            # ClientId of the Azure Service principal created.
            client-id: ${{secrets.SERVICE_PRINCIPAL_CLIENT_ID}}
            # TenantId of the Azure Service principal created.
            tenant-id: ${{secrets.TENANT_ID}}
            # Azure subscriptionId
            subscription-id: ${{secrets.SUBSCRIPTION_ID}}  


      - name: Set AKS context
        run: az aks get-credentials --name ${{ secrets.APP_NAME }} --resource-group ${{ secrets.APP_NAME }}     

      - name: Create namespace 
        run: |
          kubectl create namespace identity || echo "Namespace already exists"

      - name: Deploy Signing Cert
        run: |
          run: kubectl apply -f ./kubernetes/signing-cer.yaml
      
      - name: Deploy Identity Service
        run: |
          kubectl apply -f ./kubernetes/identity.yaml      
      